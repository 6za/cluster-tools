apiVersion: v1
kind: ServiceAccount
metadata:
  name: ngrok-agent-sa
  namespace: ngrok-agent
--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ngrok-agent-cr
rules:
  - apiGroups: [""]
    resources: ["secrets","configmap"]
    verbs: ["get", "list", "watch"]
--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ngrok-agent-crb
subjects:
- kind: ServiceAccount
  name: ngrok-agent-sa
  namespace: ngrok-agent
roleRef:
  kind: ClusterRole
  name: ngrok-agent-cr
  apiGroup: rbac.authorization.k8s.io


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ngrok-agent
  namespace: ngrok-agent
spec:
  selector:
    matchLabels:
      app: ngrok-agent
  template:
    metadata:
      labels:
        app: ngrok-agent
    spec:
      containers:
      - args:
        - http
        - atlantis.atlantis.svc.cluster.local:80

        image: docker.io/ngrok/ngrok:3
        name: ngrok-agent
        ports:
        - containerPort: 4040
          name: web
        readinessProbe:
          httpGet:
            path: /status
            port: 4040
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: ngrok-agent
  namespace: ngrok-agent
spec:
  ports:
  - name: web
    port: 4040
    targetPort: 4040
  selector:
    app: ngrok-agent
    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ngrok-checker
  annotations:
    argocd.argoproj.io/sync-wave: "10"  
spec:
  selector:
    matchLabels:
      app: ngrok-checker
  template:
    metadata:
      labels:
        app: ngrok-checker
    spec:
      serviceAccount: ngrok-agent-sa
      containers:
      - command:
        - /usr/local/bin/kubefirst
        - tool 
        - webhook-checker 
        - --owner 
        - ${GITHUB_OWNER}
        - --repo 
        - http://github.com/${GITHUB_OWNER}/gitops.git
        image: {{ .Values.image }}
        env:
        - name: GITHUB_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: ngrok-secrets
              key: PERSONAL_ACCESS_TOKEN
              optional: false 
        - name: GITHUB_OWNER
          valueFrom:
            secretKeyRef:
              name: ngrok-secrets
              key: USERNAME
              optional: false 
        name: ngrok-checker
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: ngrok-secrets
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  target:
    name: ngrok-secrets
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-secrets-backend
  refreshInterval: 10s
  dataFrom:
    - extract:      
        key: /ci-secrets